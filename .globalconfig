# Global analyzer configuration file for PubDev MCP Server
# Applies to all C# projects in the solution

is_global = true

# Code quality rules
dotnet_analyzer_diagnostic.category-security.severity = error
dotnet_analyzer_diagnostic.category-reliability.severity = error
dotnet_analyzer_diagnostic.category-performance.severity = warning
dotnet_analyzer_diagnostic.category-maintainability.severity = suggestion

# Specific rules for MCP server development
dotnet_diagnostic.CA1031.severity = none # Do not catch general exception types (MCP transport requires this)
dotnet_diagnostic.CA1062.severity = none # Validate arguments of public methods (covered by nullable reference types)
dotnet_diagnostic.CA1303.severity = none # Do not pass literals as localized parameters (server messages)
dotnet_diagnostic.CA1848.severity = none # Use LoggerMessage delegates (covered by source generators)
dotnet_diagnostic.CA2007.severity = none # Consider calling ConfigureAwait (not needed in .NET 6+)
dotnet_diagnostic.CA2227.severity = none # Collection properties should be read only (DTOs require settable collections)

# Nullable reference type rules
dotnet_diagnostic.CS8618.severity = error # Non-nullable field must contain a non-null value when exiting constructor
dotnet_diagnostic.CS8625.severity = error # Cannot convert null literal to non-nullable reference type
dotnet_diagnostic.CS8601.severity = error # Possible null reference assignment
dotnet_diagnostic.CS8602.severity = error # Dereference of a possibly null reference
dotnet_diagnostic.CS8603.severity = error # Possible null reference return
dotnet_diagnostic.CS8604.severity = error # Possible null reference argument

# Performance sensitive rules for pub.dev API calls
dotnet_diagnostic.CA1806.severity = error # Do not ignore method results
dotnet_diagnostic.CA1810.severity = error # Initialize reference type static fields inline
dotnet_diagnostic.CA1822.severity = suggestion # Mark members as static
dotnet_diagnostic.CA1829.severity = error # Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1830.severity = error # Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1831.severity = error # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = error # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = error # Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1834.severity = error # Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1835.severity = error # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1836.severity = error # Prefer IsEmpty over Count
dotnet_diagnostic.CA1837.severity = error # Use 'Environment.ProcessId'
dotnet_diagnostic.CA1838.severity = error # Avoid 'StringBuilder' parameters for P/Invokes

# Async best practices for I/O operations
dotnet_diagnostic.CA2012.severity = error # Use ValueTasks correctly
dotnet_diagnostic.CA2016.severity = error # Forward the 'CancellationToken' parameter to methods that take one